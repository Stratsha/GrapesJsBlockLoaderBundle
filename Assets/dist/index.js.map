{"version":3,"file":"index.js","mappings":"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","sources":["webpack://grapesjs-block-loader-bundle/webpack/universalModuleDefinition","webpack://grapesjs-block-loader-bundle/webpack/bootstrap","webpack://grapesjs-block-loader-bundle/webpack/runtime/make namespace object","webpack://grapesjs-block-loader-bundle/./Assets/src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-block-loader-bundle\"] = factory();\n\telse\n\t\troot[\"grapesjs-block-loader-bundle\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import grapesjs from 'grapesjs';\nimport { IBlockAttributes, IBlockItem } from './interfaces';\n\n// declare type for window so ts will not complain during compiling\ndeclare global {\n    interface Window {\n        MauticGrapesJsPlugins: object[];\n        CustomBlockLoaderNamespace: any;\n        id: any;\n        Mautic: any;\n    }\n}\n\nwindow.CustomBlockLoaderNamespace = window.CustomBlockLoaderNamespace || {};\n\nconst GrapesJsBlockLoader: grapesjs.Plugin = ( editor ) => {\n    editor.on( 'load', () => {\n        let themePath:any = '';\n        let editorType = '';\n        \n        // email or page builder?\n        if ( window.id !== null && window.id[0] !== null && typeof window.id[0] !== 'undefined' ) {\n            if ( window.id[0].id === 'page_sessionId' ) {\n                editorType = 'page';\n            } else if ( window.id[0].id === 'emailform_sessionId' ) {\n                editorType = 'email';\n            }\n        } else {\n            const emailBuilder = document.querySelector( 'div.builder.email-builder' );\n            const pageBuilder = document.querySelector( 'div.builder.page-builder' );\n            if ( emailBuilder !== null ) {\n                editorType = 'email';\n            } else if ( pageBuilder !== null ) {\n                editorType = 'page';\n            }\n        }\n        \n        // get the theme path\n        if ( window.Mautic !== null && window.Mautic.builderTheme !== null) {\n            themePath = window.Mautic.builderTheme;\n        } else {\n            const themeSelectedBtn = document.querySelectorAll( 'button.select-theme-selected' );\n            if ( themeSelectedBtn !== null ) {\n                const selectBtns = Array.from( themeSelectedBtn );\n                selectBtns.forEach( button => {\n                    if ( !button.classList.contains( 'hide' ) ) {\n                        const parentOfThemeSelectedBtn = button.parentElement;\n                        if ( parentOfThemeSelectedBtn !== null ) {\n                            let themeHeading = parentOfThemeSelectedBtn.querySelector( 'a.select-theme-link.btn.btn-default.hide' );\n                            if ( themeHeading !== null ) {\n                                if ( themeHeading instanceof HTMLElement ) {\n                                    themePath = themeHeading.dataset.theme;\n                                }\n                            }\n                        }\n                    }\n                } );\n            }\n        }\n        \n        if ( themePath !== null && typeof themePath !== \"undefined\" && themePath !== '' && editorType !== '' ) {\n            themePath = themePath.toLowerCase();\n            let url = '';\n            let scriptId = '';\n            if ( editorType === 'page' ) {\n                url = `/themes/${themePath}/blocks/blocks-page.js`;\n            } else if ( editorType = 'email' ) {\n                url = `/themes/${themePath}/blocks/blocks-email.js`;\n            }\n            \n            // test if script is already injected, remove if so\n            const injectedScript = document.getElementById( 'injectedBlocksScript' );\n            if ( injectedScript !== null ) {\n                injectedScript.remove();\n            }\n            \n            // load and inject script\n            // console.log( 'Will try to load: ' + url );\n            \n            return new Promise( ( resolve, reject ) => {\n                let script  = document.createElement( 'script' );\n                script.type = 'text/javascript';\n                script.charset = 'utf-8';\n                script.async = true;\n                script.id = 'injectedBlocksScript';\n                script.src = url;\n                script.onload = async () => {\n                    resolve( script );\n                    const bm = editor.BlockManager;\n                    // remove default blocks\n                    if ( window.CustomBlockLoaderNamespace.removeDefaults === true ) {\n                        bm.getAll().reset();\n                    }\n                    const templates: Record<string, string> = {}\n                    for ( const id in window.CustomBlockLoaderNamespace.templates ) {\n                        const file = window.CustomBlockLoaderNamespace.templates[id];\n                        if ( typeof file == 'string' ) {\n                            // load template file\n                            try {\n                                const response = await fetch( file );\n                                if (response.ok) {\n                                    templates[id] = await response.text();\n                                }\n                            } catch (e) {\n                                console.error( `Error fetching template file: ${file}`, e );\n                                continue;\n                            }\n                        }\n                    }\n                    // add custom blocks\n                    for ( const id in window.CustomBlockLoaderNamespace.blocks ) {\n                        if ( typeof id == 'string' ) {\n                            if ('templateFile' in window.CustomBlockLoaderNamespace.blocks[id] && typeof window.CustomBlockLoaderNamespace.blocks[id].templateFile === 'string') {\n                                window.CustomBlockLoaderNamespace.blocks[id].content = templates[window.CustomBlockLoaderNamespace.blocks[id].templateFile] || window.CustomBlockLoaderNamespace.blocks[id].content; \n                            }\n                            delete window.CustomBlockLoaderNamespace.blocks[id].templateFile; // remove template from block item\n\n                            const blockItem: IBlockItem = window.CustomBlockLoaderNamespace.blocks[id];\n                            console.log(blockItem);\n\n                            bm.add( id, blockItem );\n                        }\n                    }\n                };\n                script.onerror = (e) => {\n                    reject( new Error(`Script load error for ${url}`) );\n                };\n                document.body.appendChild( script );\n            } ).catch( err => console.log( err.message ) );\n            \n        }\n    });\n}\n\n// register the plugin globally so Mautic-GrapesJS can find it during initialization\nif ( !window.MauticGrapesJsPlugins ) window.MauticGrapesJsPlugins = [];\nwindow.MauticGrapesJsPlugins.push( {\n    name: 'GrapesJsBlockLoader',\n    plugin: GrapesJsBlockLoader,\n    context: ['page', 'email-mjml', 'email-html'] // options: [page|email-mjml|email-html]\n} );\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","CustomBlockLoaderNamespace","MauticGrapesJsPlugins","push","name","plugin","editor","on","themePath","editorType","id","emailBuilder","document","querySelector","pageBuilder","Mautic","builderTheme","themeSelectedBtn","querySelectorAll","Array","from","forEach","button","classList","contains","parentOfThemeSelectedBtn","parentElement","themeHeading","HTMLElement","dataset","theme","toLowerCase","injectedScript","getElementById","remove","Promise","resolve","reject","script","createElement","type","charset","async","src","onload","bm","BlockManager","removeDefaults","getAll","reset","templates","file","fetch","response","ok","text","console","error","blocks","templateFile","content","blockItem","log","add","onerror","e","Error","body","appendChild","catch","err","message","context"],"sourceRoot":""}